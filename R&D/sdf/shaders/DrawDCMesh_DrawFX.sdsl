shader DrawDCMesh_DrawFX : VS_PS_Base, ShaderUtils, Transformation, Camera, SDFVertex
{
    StructuredBuffer<Vertex> Vertices;
    StructuredBuffer<uint> Indices;

    [Color]
    float4 Color;

    // STREAMS ================================================================================
    stream float2 TexCoord;
    stream uint VertexID : SV_VertexID;

    // VS ================================================================================
    override stage void VSMain()
    {
        uint id = streams.InstanceID;
        Vertex v = Vertices[Indices[id]];
        //Vertex v = Vertices[id];
        
        // streams.ShadingPosition = mul(float4(v.position, 1), WorldViewProjection);
        float3 pos = v.position;        
        //pos = float3(id * 0.01, id * 0.02, 0);      
        streams.ShadingPosition = mul(float4(pos, 1), WorldViewProjection);       
        //streams.Size = P_PosSize.w;
    }


    // GS ==============================================================================

    // [maxvertexcount(4)]
    // stage void GSMain(point Input input[1], inout TriangleStream<Output> triangleStream)
    // {
    //     streams = input[0];
    //     float4 center = mul(streams.PositionWS, View);

    //     for(int i=0; i<4; i++)
    //     {
    //         streams.TexCoord  = (QuadUV[i].xy - 0.5) + 0.5;
            
    //         float4 pos = float4(0, 0, 0, 1);
    //         pos.xyz = center.xyz + QuadPositions[i].xyz * streams.Size * SizeMult;
    //         streams.ShadingPosition = mul(pos, Projection);
            
    //         triangleStream.Append(streams);
    //     }
    // }

    // PS ---------------------------------------------------------------------
    override stage void PSMain() 
    {
        // float2 tex = streams.TexCoord - 0.5f;
        // if (dot(tex, tex) > 0.25f) discard;
        streams.ColorTarget = Color * 4;
    }

};


