shader FuseCommonDrawPosNormExtension_ShaderFX : ShadingBase, ShaderBaseStream, PositionStream4, NormalBase, NormalStream, TransformationBase, Transformation, Texturing
{
    compose FuseCommonDrawPosNorm Surface;

    // End of the VS (usually skinning)
    stage override void PreTransformPosition() 
    {
        streams.PositionWS = streams.Position;
    }

    // End of tessellation (usually displacement mapping in world space, etc...)
    stage override void TransformPosition() {}

    // At the end of the geometry pipeline (to generate ShadingPosition)
    stage override void PostTransformPosition()
    {
        streams.ShadingPosition = streams.Position;
    }
    
    stage override float4 Shading() 
    {
        float3 p, n;
        Surface.posNormByFunction(p, n);
        return StrideShadingWorldNormal(p, n);
    }



    
    stage float4 StrideShadingWorldNormal(float3 worldPos, float3 normal)
    {
        streams.PositionWS = float4(worldPos, 1);
        float4 posWVP = mul(streams.PositionWS, ViewProjection);
        streams.normalWS = normal;
        streams.meshNormalWS = normal;
        streams.DepthVS = posWVP.w;
        streams.Depth = posWVP.z/posWVP.w;
        return base.Shading();
    }
    
};